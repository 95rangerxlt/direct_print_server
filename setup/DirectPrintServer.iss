; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Direct Print Server"
#define MyAppVersion "0.1-alpha.5"
#define MyAppPublisher "JSC Solvaig"
#define MyAppURL "https://github.com/procks/direct_print_server"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{215ED57E-4DC9-40EA-85E2-4A326D2C0419}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\DirectPrintServer
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=Output
OutputBaseFilename=DirectPrintServerSetup
Compression=lzma
SolidCompression=yes
DisableWelcomePage=no

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"
Name: "ru"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "uk"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[CustomMessages]
en.InstallingService=Installing service "Direct Print Service"
en.UninstallingService=Uninstalling service "Direct Print Service"
en.ServiceAccountInformation=Log on "Direct Print Service" as:
en.EnterAccountInformation=Please enter account information
en.LocalSystemAccount=Local system account (shared printers not available)
en.User=User
en.Password=Password
en.ConfirmPassword=Confirm password
en.PleaseEnterUser=Please enter User
en.PleaseEnterPass=Please enter Password
en.PasswordNotMatch=Password does not match the confirm password
en.Configure=Configure Service %1
en.Monitor=Monitor Service %1
en.StartService=Start Service %1
en.StopService=Stop Service %1
en.Start=Start %1
en.Stop=Stop %1

ru.InstallingService=Установка службы "Direct Print Service"
ru.UninstallingService=Удаление службы "Direct Print Service"
ru.ServiceAccountInformation=Запускать сервис "Direct Print Service" от имени:
ru.EnterAccountInformation=Пожалуйста, введите данные учетной записи
ru.LocalSystemAccount=С системной учетной записью (общие принтеры не доступны)
ru.User=Пользователь
ru.Password=Пароль
ru.ConfirmPassword=Подтвердите пароль
ru.PleaseEnterUser=Введите имя пользователя
ru.PleaseEnterPass=Введите пароль
ru.PasswordNotMatch=Несовпадение паролей
ru.Configure=Configure Service %1
ru.Monitor=Monitor Service %1
ru.StartService=Start Service %1
ru.StopService=Stop Service %1
ru.Start=Start %1
ru.Stop=Stop %1

uk.InstallingService=Встановлення служби "Direct Print Service"
uk.UninstallingService=Видалення служби "Direct Print Service"
uk.ServiceAccountInformation=Запускати сервіс "Direct Print Service" від імені:
uk.EnterAccountInformation=Будь ласка, введіть дані облікового запису
uk.LocalSystemAccount=З системним обліковим записом (загальні принтери не доступні)
uk.User=Користувач
uk.Password=Пароль
uk.ConfirmPassword=Підтвердіть пароль
uk.PleaseEnterUser=Введіть ім'я користувача
uk.PleaseEnterPass=Введіть пароль
uk.PasswordNotMatch=Неспівпадіння паролів
uk.Configure=Configure Service %1
uk.Monitor=Monitor Service %1
uk.StartService=Start Service %1
uk.StopService=Stop Service %1
uk.Start=Start %1
uk.Stop=Stop %1

[Files]
Source: "Files\prunsrv.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\gsdll32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\gswin32c.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\start.cmd"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\stop.cmd"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\install.cmd"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\install_ex.cmd"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\PrintServer.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\prunmgr.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\prunsrv.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "Files\uninstall.cmd"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Components]
Name: "program"; Description: "Program Files"; Types: full compact custom; Flags: fixed
Name: "autostart"; Description: "Autostart"; Types: full
Name: "autostart\sturtup"; Description: "SturtUp"; Flags: exclusive;
Name: "autostart\service"; Description: "Service"; Flags: exclusive;

[Tasks]
Name: desktopicon; Description: "Create a &desktop icon"; GroupDescription: "Additional icons:"; Components: not autostart\service; Flags: unchecked
;Name: startAutorun; Description: "Запустить сервер"; Components: autostart\sturtup

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{group}\{cm:Configure,{#MyAppName}}"; Filename: "{app}\prunmgr.exe"; Parameters: "//ES//DirectPrintService"
Name: "{group}\{cm:Monitor,{#MyAppName}}"; Filename: "{app}\prunmgr.exe"; Parameters: "//MS//DirectPrintService"
;Name: "{group}\{cm:Start,{#MyAppName}}"; Filename: "{app}\prunsrv.exe"; Parameters: "//RS//DirectPrintService"; WorkingDir: "{app}"
Name: "{group}\{cm:StartService,{#MyAppName}}"; Filename: "{app}\prunmgr.exe"; Parameters: "//MR//DirectPrintService";
Name: "{group}\{cm:StopService,{#MyAppName}}"; Filename: "{app}\prunsrv.exe"; Parameters: "//SS//DirectPrintService"
Name: "{group}\{cm:Start, {#MyAppName}}"; Filename: "{app}\start.cmd"; Components: not autostart\service
Name: "{group}\{cm:Stop, {#MyAppName}}"; Filename: "{app}\stop.cmd"; Components: not autostart\service
;Name: "{commonstartup}\{#MyAppName}"; Filename: "javaw -jar"; Parameters: "{app}\PrintServer.jar"; Components: autostart\sturtup
Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\start.cmd"; Components: autostart\sturtup
Name: "{commondesktop}\{cm:Start, {#MyAppName}}"; Filename: "{app}\start.cmd"; Components: not autostart\service; Tasks: desktopicon

[Run]
Filename: "{app}\install.cmd"; Parameters: "{code:GetUserName} {code:GetPassword}"; WorkingDir: "{app}"; Flags: runhidden; StatusMsg: "{cm:InstallingService}"; Components: autostart\service
Filename: "{app}\start.cmd"; WorkingDir: "{app}"; Flags: runhidden; Components: autostart\sturtup

[UninstallRun]
Filename: "{app}\uninstall.cmd"; WorkingDir: "{app}"; Flags: runhidden; StatusMsg: "{cm:UninstallingService}"

[Code]
var
  Page: TInputQueryWizardPage;
  LocalSystemAccountCheckBox: TNewCheckBox;
  //LabelFolder: TLabel;
  UserEdit: TNewEdit;
  PassEdit: TNewEdit;
  ConfPassEdit: TNewEdit;
  UserStaticText: TNewStaticText;
  PassStaticText: TNewStaticText;
  ConfPassStaticText: TNewStaticText;

procedure LocalSystemAccountCheckBoxOnClick(Sender: TObject);
begin
  if LocalSystemAccountCheckBox.Checked then begin
    UserStaticText.Enabled := false;
    UserEdit.Enabled := false;
    PassStaticText.Enabled := false;
    PassEdit.Enabled := false;
    ConfPassStaticText.Enabled := false;
    ConfPassEdit.Enabled := false;
  end
  else begin
    UserStaticText.Enabled := true;
    UserEdit.Enabled := true;
    PassStaticText.Enabled := true;
    PassEdit.Enabled := true;
    ConfPassStaticText.Enabled := true;
    ConfPassEdit.Enabled := true;
  end;
end;

procedure InitializeWizard;
begin
  Page := CreateInputQueryPage(wpSelectComponents, //,wpWelcome
  CustomMessage('ServiceAccountInformation'), CustomMessage('EnterAccountInformation'), '');

  LocalSystemAccountCheckBox := TNewCheckBox.Create(Page);
  LocalSystemAccountCheckBox.Parent := Page.Surface;
  LocalSystemAccountCheckBox.Width := Page.SurfaceWidth - ScaleX(8);
  LocalSystemAccountCheckBox.Caption := CustomMessage('LocalSystemAccount');
  LocalSystemAccountCheckBox.Checked := true;
  LocalSystemAccountCheckBox.OnClick := @LocalSystemAccountCheckBoxOnClick;

  UserStaticText := TNewStaticText.Create(Page);
  UserStaticText.Top := LocalSystemAccountCheckBox.Top + LocalSystemAccountCheckBox.Height + ScaleY(12);
  UserStaticText.Caption := CustomMessage('User');
  UserStaticText.AutoSize := True;
  UserStaticText.Parent := Page.Surface;
  UserStaticText.Enabled := false;

  UserEdit := TNewEdit.Create(Page);
  UserEdit.Parent := Page.Surface;
  UserEdit.Top := LocalSystemAccountCheckBox.Top + LocalSystemAccountCheckBox.Height + ScaleY(8);
  UserEdit.Left := ScaleX(130);
  UserEdit.Width := ScaleX(200);
  UserEdit.Enabled := false;

  PassStaticText := TNewStaticText.Create(Page);
  PassStaticText.Top := UserEdit.Top + UserEdit.Height + ScaleY(12);
  PassStaticText.Caption := CustomMessage('Password');
  PassStaticText.AutoSize := True;
  PassStaticText.Parent := Page.Surface;
  PassStaticText.Enabled := false;

  PassEdit := TNewEdit.Create(Page);
  PassEdit.Parent := Page.Surface;
  PassEdit.Top := UserEdit.Top + UserEdit.Height + ScaleY(8);
  PassEdit.Left := UserEdit.Left;
  PassEdit.Width := UserEdit.Width;
  PassEdit.PasswordChar := '*';
  PassEdit.Enabled := false;

  ConfPassStaticText := TNewStaticText.Create(Page);
  ConfPassStaticText.Top := PassEdit.Top + PassEdit.Height + ScaleY(12);
  ConfPassStaticText.Caption := CustomMessage('ConfirmPassword');
  ConfPassStaticText.AutoSize := True;
  ConfPassStaticText.Parent := Page.Surface;
  ConfPassStaticText.Enabled := false;

  ConfPassEdit := TNewEdit.Create(Page);
  ConfPassEdit.Parent := Page.Surface;
  ConfPassEdit.Top := PassEdit.Top + PassEdit.Height + ScaleY(8);
  ConfPassEdit.Left := UserEdit.Left;
  ConfPassEdit.Width := UserEdit.Width;
  ConfPassEdit.PasswordChar := '*';
  ConfPassEdit.Enabled := false;
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  // initialize result to not skip any page (not necessary, but safer)
  Result := False;
  // if the page that is asked to be skipped is your custom page, then...
  if PageID = Page.ID then
    // if the component is not selected, skip the page
    Result := not IsComponentSelected('autostart\service');
end;

function NextButtonClick(CurPageID: Integer): Boolean;
//var
//  ResultCode: Integer;
begin 
  Result := true;
//  Log('NextButtonClick(' + IntToStr(CurPageID) + ') called');
  case CurPageID of
    Page.ID: begin
      if not LocalSystemAccountCheckBox.Checked then begin
        if UserEdit.Text = '' then begin
          Result := false;
          MsgBox(CustomMessage('PleaseEnterUser'), mbInformation, MB_OK);
          exit;
        end;
        if PassEdit.Text = '' then begin
          Result := false;
          MsgBox(CustomMessage('PleaseEnterPass'), mbInformation, MB_OK);
          exit;
        end;
        if not (ConfPassEdit.Text = PassEdit.Text) then begin
          Result := false;
          MsgBox(CustomMessage('PasswordNotMatch'), mbInformation, MB_OK);
          exit;
        end;
      end;
    end;
  end;
end;

function GetUserName(Param: String): string;
begin
  if not (UserEdit.Text = '') then
    result := '.\' + UserEdit.Text
  else
    result := '';
end;

function GetPassword(Param: String): string;
begin
  result := PassEdit.Text;
end;

procedure CurUninstallStepChanged (CurUninstallStep: TUninstallStep);
//var
//  mres : integer;
//  ResultCode: Integer;
begin
  case CurUninstallStep of
    usPostUninstall:
      begin
//        mres := MsgBox('Do you want to delete saved files?', mbConfirmation, MB_YESNO or MB_DEFBUTTON2)
//        if mres = IDYES then
        DelTree(ExpandConstant('{userappdata}\DirectPrintServiceLogs'), True, True, True);
      end;
  end;
end;